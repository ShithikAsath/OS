#include <stdio.h>

int main() {
    int t[20], d[20], h, i, j, n, temp, k, atr[20], sum = 0;

    printf("Enter the number of tracks to be traversed: ");
    scanf("%d", &n);

    printf("Enter the position of the head: ");
    scanf("%d", &h);

    t[0] = 0;
    t[1] = h;

    printf("Enter the tracks: ");
    for (i = 2; i < n + 2; i++) {
        scanf("%d", &t[i]);
    }

    // Sorting tracks in ascending order
    for (i = 0; i < n + 2; i++) {
        for (j = 0; j < (n + 2) - i - 1; j++) {
            if (t[j] > t[j + 1]) {
                temp = t[j];
                t[j] = t[j + 1];
                t[j + 1] = temp;
            }
        }
    }

    // Finding initial head position in the sorted array
    for (i = 0; i < n + 2; i++) {
        if (t[i] == h) {
            j = i; // Start index for traversal order
            k = i; // Start index for second half of traversal order
            break;
        }
    }

    // Constructing the traversal order
    int count = 0;
    for (i = 0; j >= 0; i++) {
        atr[i] = t[j];
        j--;
    }

    for (k = k + 1; k < n + 2; k++, i++) {
        atr[i] = t[k];
    }

    // Calculating total head movements
    for (j = 0; j < n + 1; j++) {
        if (atr[j] > atr[j + 1]) {
            d[j] = atr[j] - atr[j + 1];
        } else {
            d[j] = atr[j + 1] - atr[j];
        }
        sum += d[j];
    }

    // Outputting results
    printf("\nTotal header movements: %d", sum);
    printf("\nAverage header movements: %.2f", (float)sum / n);

    return 0;
}
